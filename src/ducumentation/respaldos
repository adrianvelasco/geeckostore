App{
import React, {Component} from 'react';
import {BrowserRouter, Switch, Route} from 'react-router-dom';
import {NotFound} from './Errors';
import Writers from './Writers';
import Layout from './Layout';

class App extends Component{
  state = {
    writers:[]
  }
   async componentDidMount(){
    const writers = await (await  fetch('http://localhost:3004/writers?_embed=texts')).json()

    this.setState({ writers })
  }
  render(){
    const {writers} = this.state;

    return<BrowserRouter>
      <Layout writers={writers}>
        <Switch>
          <Route exact path="/" render={() => <div>Home</div>}/>
          <Route path="/writers" render={
            props => <Writers {...props} writers={writers}/>
          }/>
          <Route Component={NotFound}/>
        </Switch>
      </Layout>
    </BrowserRouter>
  }
}
export default App;

}

//respaldo login
import React, {Component} from 'react';
import "../css/Login.css";
class Login extends Component {

  render(){

    let content = (
      <div className="login-wrap">
        <div className="login-html">
          <input id="tab-1" type="radio" name="tab" className="sign-in" checked/><label htmlFor="tab-1" className="tab">Iniciar</label>
          <input id="tab-2" type="radio" name="tab" className="sign-up" checked/><label htmlFor="tab-2" className="tab">Registrate</label>
          <div className="login-form">
            <div className="sign-in-htm">
              <div className="group">
                <label htmlFor="user" className="label">Usuario</label>
                <input id="user" type="text" className="input"/>
              </div>
              <div className="group">
                <label htmlFor="pass" className="label">Contraseña</label>
                <input id="pass" type="password" className="input" data-type="password" />
              </div>
              <div className="group">
                <input id="check" type="checkbox" className="check" checked/>
                <label htmlFor="check"><span className="icon"></span>Recuerdame</label>
              </div>
              <div className="group">
                <input type="submit" className="button" value="Iniciar Sesión"/>
              </div>
              <div className="hr"/>
              <div className="foot-link">
                <a href="/">Olvidaste tu Contraseña?</a>
              </div>
            </div>
            <div className="sign-up-htm">
              <div className="group">
                <label htmlFor="user" className="label">Usuario</label>
                <input id="user" type="text" className="input"/>
              </div>
              <div className="group">
                <label htmlFor="pass" className="label">Contraseña</label>
                <input id="pass" type="password" className="input" data-type="password"/>
              </div>
              <div className="group">
                <label htmlFor="pass" className="label">Repita la Contraseña</label>
					      <input id="pass" type="password" className="input" data-type="password" />
              </div>
              <div className="group">
                <label htmlFor="pass" className="label">Correo Electronico</label>
                <input id="pass" type="text" className="input" />
              </div>
              <div className="group">
                <input type="submit" className="button" value="Registrate" />
              </div>
              <div className="hr"></div>
              <div className="foot-lnk">
                <label htmlFor="tab-1" /><a href="/">Ya es Miembro??</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    );

    return content;
  }
}

export default Login;
//Respaldo login css
/* Barra de division del login */
/* .strike {
    display: block;
    text-align: center;
    overflow: hidden;
    white-space: nowrap;
}

.strike > span {
    position: relative;
    display: inline-block;
}

.strike > span:before,
.strike > span:after {
    content: "";
    position: absolute;
    top: 50%;
    width: 9999px;
    height: 1px;
    background:gray;
}

.strike > span:before {
    right: 100%;
    margin-right: 15px;
}

.strike > span:after {
    left: 100%;
    margin-left: 15px;
}
.linkregegister{
  text-align: center; */

/* Terminación de la barra de devisión */
body{
	margin:0;
	color:#6a6f8c;
	background:#c8c8c8;
	font:600 16px/18px 'Open Sans',sans-serif;
}
*,:after,:before{box-sizing:border-box}
.clearfix:after,.clearfix:before{content:'';display:table}
.clearfix:after{clear:both;display:block}
a{color:inherit;text-decoration:none}

.login-wrap{
	width:100%;
	margin:auto;
	max-width:525px;
	min-height:670px;
	position:relative;
	background:url(https://www.shutterstock.com/image-illustration/blue-room-3d-background-1043622814) no-repeat center;
	box-shadow:0 12px 15px 0 rgba(0,0,0,.24),0 17px 50px 0 rgba(0,0,0,.19);
}
.login-html{
	width:100%;
	height:100%;
	position:absolute;
	padding:80px 70px 50px 70px;
	background:rgba(40,57,101,.9);
}
.login-html .sign-in-htm,
.login-html .sign-up-htm{
	top:0;
	left:0;
	right:0;
	bottom:0;
	position:absolute;
	transform:rotateY(180deg);
	backface-visibility:hidden;
	transition:all .4s linear;
}
.login-html .sign-in,
.login-html .sign-up,
.login-form .group .check{
	display:none;
}
.login-html .tab,
.login-form .group .label,
.login-form .group .button{
	text-transform:uppercase;
}
.login-html .tab{
	font-size:22px;
	margin-right:15px;
	padding-bottom:5px;
	margin:0 15px 10px 0;
	display:inline-block;
	border-bottom:2px solid transparent;
}
.login-html .sign-in:checked + .tab,
.login-html .sign-up:checked + .tab{
	color:#fff;
	border-color:#1161ee;
}
.login-form{
	min-height:345px;
	position:relative;
	perspective:1000px;
	transform-style:preserve-3d;
}
.login-form .group{
	margin-bottom:15px;
}
.login-form .group .label,
.login-form .group .input,
.login-form .group .button{
	width:100%;
	color:#fff;
	display:block;
}
.login-form .group .input,
.login-form .group .button{
	border:none;
	padding:15px 20px;
	border-radius:25px;
	background:rgba(255,255,255,.1);
}
.login-form .group input[data-type="password"]{
	text-security:circle;
	-webkit-text-security:circle;
}
.login-form .group .label{
	color:#aaa;
	font-size:12px;
}
.login-form .group .button{
	background:#1161ee;
}
.login-form .group label .icon{
	width:15px;
	height:15px;
	border-radius:2px;
	position:relative;
	display:inline-block;
	background:rgba(255,255,255,.1);
}
.login-form .group label .icon:before,
.login-form .group label .icon:after{
	content:'';
	width:10px;
	height:2px;
	background:#fff;
	position:absolute;
	transition:all .2s ease-in-out 0s;
}
.login-form .group label .icon:before{
	left:3px;
	width:5px;
	bottom:6px;
	transform:scale(0) rotate(0);
}
.login-form .group label .icon:after{
	top:6px;
	right:0;
	transform:scale(0) rotate(0);
}
.login-form .group .check:checked + label{
	color:#fff;
}
.login-form .group .check:checked + label .icon{
	background:#1161ee;
}
.login-form .group .check:checked + label .icon:before{
	transform:scale(1) rotate(45deg);
}
.login-form .group .check:checked + label .icon:after{
	transform:scale(1) rotate(-45deg);
}
.login-html .sign-in:checked + .tab + .sign-up + .tab + .login-form .sign-in-htm{
	transform:rotate(0);
}
.login-html .sign-up:checked + .tab + .login-form .sign-up-htm{
	transform:rotate(0);
}

.hr{
	height:2px;
	margin:60px 0 50px 0;
	background:rgba(255,255,255,.2);
}
.foot-lnk{
	text-align:center;
}

respaldo de login jsx
import React from 'react';
import PropTypes from 'prop-types';
import Avatar from '@material-ui/core/Avatar';
import Button from '@material-ui/core/Button';
import CssBaseline from '@material-ui/core/CssBaseline';
import FormControl from '@material-ui/core/FormControl';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';
import Checkbox from '@material-ui/core/Checkbox';
import Input from '@material-ui/core/Input';
import InputLabel from '@material-ui/core/InputLabel';
import LockIcon from '@material-ui/icons/LockOutlined';
import Paper from '@material-ui/core/Paper';
import Typography from '@material-ui/core/Typography';
import withStyles from '@material-ui/core/styles/withStyles';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { fab } from '@fortawesome/free-brands-svg-icons'
import { library } from '@fortawesome/fontawesome-svg-core'
import {styles, button2, button3} from '../styles/Login';
import {Link} from 'react-router-dom';
import '../css/Login.css';

library.add(fab);

class Login extends React.Component{

  render(){
    const { classes } = this.props;

    return (
      <div className="fondo">
        <main className={classes.main}>
          <CssBaseline />
          <Paper className={classes.paper}>
            <Avatar className={classes.avatar}>
              <LockIcon />
            </Avatar>
            <Typography component="h1" variant="h5">
              Iniciar Sesión
            </Typography>
            <form className={classes.form}>
              <FormControl margin="normal" required fullWidth>
                <InputLabel htmlFor="email">Usuario</InputLabel>
                <Input id="email" name="email" autoComplete="email" autoFocus />
              </FormControl>
              <FormControl margin="normal" required fullWidth>
                <InputLabel htmlFor="password">Contraseña</InputLabel>
                <Input name="password" type="password" id="password" autoComplete="current-password" />
              </FormControl>
              <FormControlLabel control={<Checkbox value="remember" color="primary" />} label="Recuerdame"/>
              <Button type="submit" fullWidth variant="contained" color="primary" className={classes.submit}>
                Continuar
              </Button>
              <MuiThemeProvider theme={button2}>
               <Button fullWidth type="button"  variant="contained" color="primary" size="medium" className={classes.button2}  onChange={this.onChange}>
                  <FontAwesomeIcon icon={['fab', 'google']}  pull="left" size="1x"/><strong>Gmail</strong>
               </Button>
             </MuiThemeProvider>
             <MuiThemeProvider theme={button3}>
               <Button fullWidth type="button"  variant="contained" color="primary" size="medium" className={classes.button3}  onChange={this.onChange}>
                  <FontAwesomeIcon icon={['fab', 'facebook-f']}  pull="left" size="1x"/><strong>Facebook</strong>
               </Button>
             </MuiThemeProvider>
               <Link to='/Register' style={{color: '#2196f3'}} className={classes.linkregistre}><h5>¿Eres nuevo? Registrate</h5></Link>
            </form>
          </Paper>
        </main>
      </div>
    );
  }
}

Login.propTypes = {
  classes: PropTypes.object.isRequired,
};

export default withStyles(styles)(Login);
con su styles
import createMuiTheme from '@material-ui/core/styles/createMuiTheme';

export const styles = theme => ({
  main: {
    width: 'auto',
    display: 'block',
    marginLeft: theme.spacing.unit * 3,
    marginRight: theme.spacing.unit * 3,
    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {
      width: 400,
      marginLeft: 'auto',
      marginRight: 'auto',
    },
  },
  paper: {
    marginTop: theme.spacing.unit * 4,
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,
  },
  avatar: {
    margin: theme.spacing.unit,
    backgroundColor: theme.palette.secondary.main,
  },
  form: {
    width: '100%', // Fix IE 11 issue.
    marginTop: theme.spacing.unit,
  },
  submit: {
    marginTop: theme.spacing.unit * 3,
  },
  button2:{
    marginTop: theme.spacing.unit * 1,
  },
  button3:{
    marginTop: theme.spacing.unit * 1,
  },
});
export const button2 = createMuiTheme({
  typography: {
    useNextVariants: true,
  },
  palette:
  {primary:{
    main: '#C62828',
  }}
});
export const button3 = createMuiTheme({
  typography: {
    useNextVariants: true,
  },
  palette:
  {primary:{
    main: '#0D47A1',
  }}
});

































// import createMuiTheme from '@material-ui/core/styles/createMuiTheme';
//
//
// export const styles = theme => ({
//     main: {
//       width: 'auto',
//       display: 'block', // Fix IE 11 issue.
//       marginLeft: theme.spacing.unit * 3,
//       marginRight: theme.spacing.unit * 3,
//       [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {
//         width: 400,
//         marginLeft: 'auto',
//         marginRight: 'auto',
//       },
//     },
//     paper: {
//       marginTop: theme.spacing.unit * 3,
//       display: 'flex',
//       flexDirection: 'column',
//       alignItems: 'center',
//       padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 1}px`,
//     },
//     avatar: {
//       margin: theme.spacing.unit,
//       backgroundColor: '#ff5722',
//     },
//     form: {
//       width: '100%', // Fix IE 11 issue.
//       marginTop: theme.spacing.unit,
//     },
//     submit: {
//       marginTop: theme.spacing.unit * 1,
//     },
//     root: {
//       width: '100%',
//       maxWidth: '360px',
//       backgroundColor: theme.palette.background.paper,
//     },
//     button2:{
//        marginTop: theme.spacing.unit * -1,
//     },
//     button3:{
//        marginTop: theme.spacing.unit * 1,
//     },
//     linea:{
//       marginTop: theme.spacing.unit * -1,
//     },
//     linknav:{
//       marginLeft: theme.spacing.unit * 3,
//     },
//   });
//
//   export const button1 = createMuiTheme({
//     typography: {
//       useNextVariants: true,
//     },
//     palette:
//     {primary:{
//       main: '#ff5722',
//     }}
//   });
//   export const button2 = createMuiTheme({
//     typography: {
//       useNextVariants: true,
//     },
//     palette:
//     {primary:{
//       main: '#283593',
//     }}
//   });
//
//   export const button3 = createMuiTheme({
//     typography: {
//       useNextVariants: true,
//     },
//     palette:
//     {primary:{
//       main: '#C62828',
//     }}
//   });
//   import React,{Component} from 'react';
//   import ReactDOM from 'react-dom';
//   import PropTypes from 'prop-types';
//   import { BrowserRouter, Link} from 'react-router-dom';
//
//   import {
//     Avatar, Button, CssBaseline, FormControl, FormControlLabel, InputAdornment,
//     Checkbox, Input, InputLabel, Paper, Typography
//   } from '@material-ui/core';
//   import {  MuiThemeProvider, withStyles } from '@material-ui/core/styles'
//   import { AccountCircle, LockOutlined} from '@material-ui/icons';
//   import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
//   import { fab } from '@fortawesome/free-brands-svg-icons'
//   import { library } from '@fortawesome/fontawesome-svg-core'
//   import {styles, button1, button2, button3}from '../styles/Login';
//   import '../css/Login.css';
//   import Navegation from '../views/Navegation';
//
//   library.add(fab);
//
//   class Login extends Component{
//      constructor(props){
//       super(props);
//       this.state = {
//         account:'',
//         password:'',
//
//       }
//
//     this.handleSubmit = this.handleSubmit.bind(this);
//     }
//
//     onChange = (e) => {
//       this.setState({ [e.target.name]: e.target.value });
//      }
//
//      handleSubmit(event) {
//       const data = new FormData(event.target);
//
//       fetch('https://api.geecko.com.mx/v1/auth/login',{
//       method: 'POST',
//       body: data,
//       }).then((response) => {
//         console.log(response.headers);
//         if(response.count === 0){
//           ReactDOM.render(
//           alert("El usuario no existe"),
//           document.getElementById('info')
//         );
//         }else{
//           ReactDOM.render(
//             <BrowserRouter>
//              <Navegation/>
//            </BrowserRouter>,
//             document.getElementById('root')
//           );
//         }
//         const access_token = response.headers.get('Authorization');
//         localStorage.setItem("Authorization", access_token);
//         return response.json()}
//       ).then(auth => {
//         console.log(auth);
//         localStorage.setItem("token", auth.token);
//       });
//
//       this.input1.value = '';
//       this.input2.value = '';
//       event.preventDefault();
//     }
//
//     render(){
//       const { classes } = this.props;
//       const {account, password} = this.state;
//
//       let content = (
//         <div>
//           <main className={classes.main}>
//             <CssBaseline/>
//               <Paper className={classes.paper}>
//                 <Avatar className={classes.avatar}>
//                   <LockOutlined />
//                 </Avatar>
//                 <Typography component="h1" variant="h5">
//                   Iniciar Sesión
//                 </Typography>
//                   <form className={classes.form} onSubmit={this.handleSubmit}>
//                     <FormControl margin="normal" required fullWidth>
//                       <InputLabel htmlFor="Usuario">Usuario</InputLabel>
//                       <Input ref={(input) => {this.input1 = input;}} value={account} onChange = {this.onChange}
//                         startAdornment={
//                           <InputAdornment position="start">
//                             <AccountCircle variant="contained"/>
//                           </InputAdornment>
//                         } type="text" name="account" id="account" autoComplete="lname" autoFocus />
//                     </FormControl>
//                     <FormControl margin="normal" required fullWidth>
//                       <InputLabel htmlFor="password">Contraseña</InputLabel>
//                       <Input ref={(input) => {this.input2 = input;}} value={password} onChange = {this.onChange}
//                         startAdornment={
//                           <InputAdornment position="start"  variant="outlined">
//                             <LockOutlined  variant="contained"/>
//                           </InputAdornment>
//                         }type="password" name="password" id="password" autoComplete="lname"/>
//                     </FormControl>
//                     <FormControlLabel
//                       control={<Checkbox value="remember" color="primary" required />}
//                       label="Recuerdame"
//                     />
//                     <MuiThemeProvider theme={button1}>
//                       <Button type="submit" fullWidth variant="contained" color="primary" className={classes.submit}  onChange={this.onChange}>
//                          Iniciar sesión
//                       </Button>
//                     </MuiThemeProvider>
//                     <div  variant="contained" className="strike" style={{padding:"2px"}}>
//                        <span style={{color:'gray'}}><h5>O Inicia con</h5></span>
//                     </div>
//                      <MuiThemeProvider theme={button3}>
//                       <Button fullWidth type="button"  variant="contained" color="primary" size="medium" className={classes.button2}  onChange={this.onChange}>
//                          <FontAwesomeIcon icon={['fab', 'google']}  pull="left" size="1x"/>Gmail
//                       </Button>
//                     </MuiThemeProvider>
//                     <MuiThemeProvider theme={button2}>
//                       <Button fullWidth type="button"  variant="contained" color="primary" size="medium" className={classes.button3}  onChange={this.onChange}>
//                          <FontAwesomeIcon icon={['fab', 'facebook']}  pull="left" size="1x"/>Facebook
//                       </Button>
//                     </MuiThemeProvider>
//                       <br/>
//                       <div className="linkregegister">
//                           <Link to='/Register' style={{color: '#2196f3'}}><h5>¿Eres nuevo? Registrate</h5></Link>
//                       </div>
//                   </form>
//               </Paper>
//           </main>
//         </div>
//       );
//       return content;
//
//     }
//   }
//   Login.propTypes = {
//     classes: PropTypes.object.isRequired,
//   };
//
//   export default withStyles(styles)(Login);

// import Visibility from '@material-ui/icons/Visibility';
// import VisibilityOff from '@material-ui/icons/VisibilityOff';
// import IconButton from '@material-ui/core/IconButton';
// import classNames from 'classnames';
//
//
// handleChange = prop => event => {
//  this.setState({ [prop]: event.target.value });
// };
//
// handleClickShowPassword = () => {
//   this.setState(state => ({ showPassword: !state.showPassword }));
// };
//
//
// <FormControl className={classNames(classes.margin, classes.textField)}>
// <InputLabel htmlFor="adornment-password">Password</InputLabel>
// <Input
// id="adornment-password"
// type={this.state.showPassword ? 'text' : 'password'}
// value={this.state.password}
// onChange={this.handleChange('password')}
// endAdornment={
// <InputAdornment position="end">
// <IconButton
//   aria-label="Toggle password visibility"
//   onClick={this.handleClickShowPassword}
// >
//   {this.state.showPassword ? <Visibility /> : <VisibilityOff />}
// </IconButton>
// </InputAdornment>
// }
// />
// </FormControl>
