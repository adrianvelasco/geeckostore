{"ast":null,"code":"import _defineProperty from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/var/www/html/geeckostore/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/geeckostore/src/views/Register.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, CssBaseline, Paper, Typography, Grid, TextField, Button, InputAdornment, IconButton } from '@material-ui/core';\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles';\nimport { AccountCircle, VisibilityOff, Visibility } from '@material-ui/icons';\nimport { styles, Guardar } from '../styles/Register';\n\nvar FormUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormUser, _Component);\n\n  function FormUser() {\n    var _this;\n\n    _classCallCheck(this, FormUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormUser).call(this));\n\n    _this.handleClickShowPassword = function () {\n      _this.setState(function (state) {\n        return {\n          showPassword: !state.showPassword\n        };\n      });\n    };\n\n    _this.handleAddUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data, url, settings, request;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = {\n                \"username\": _this.state.username,\n                \"password\": _this.state.password,\n                \"firstName\": _this.state.firstName,\n                \"lastName\": _this.state.lastName,\n                \"role\": _this.state.role,\n                \"birthdate\": _this.state.birthdate,\n                \"Email\": {\n                  \"email\": _this.state.email\n                },\n                \"Address\": {\n                  \"addressLine1\": _this.state.addressLine1,\n                  \"addressLine2\": _this.state.addressLine2,\n                  \"reference\": _this.state.reference,\n                  \"neighborhood\": _this.state.neighborhood,\n                  \"state\": _this.state.estado,\n                  \"city\": _this.state.city,\n                  \"zipCode\": _this.state.zipCode\n                },\n                \"Phone\": {\n                  \"countryCode\": _this.state.countryCode,\n                  \"phone\": _this.state.phone\n                }\n              };\n              url = 'http://localhost:3000/users';\n              settings = {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n              };\n              request = new Request(url, settings);\n              _context.next = 6;\n              return fetch(request).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return _this.setState({\n                  users: _toConsumableArray(_this.state.users).concat([data])\n                });\n              }).catch(function (error) {\n                return console.log(error);\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      username: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      role: '',\n      birthdate: '',\n      email: '',\n      addressLine1: '',\n      addressLine2: '',\n      reference: '',\n      neighborhood: '',\n      estado: '',\n      city: '',\n      zipCode: '',\n      countryCode: '',\n      phone: '',\n      showPassword: ''\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddUser = _this.handleAddUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FormUser, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      var _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(AccountCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        className: classes.form,\n        onSubmit: this.handleAddUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Datos del Usuario\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"firstName\",\n        name: \"firstName\",\n        type: \"text\",\n        label: \"Nombre\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.firstName,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"lastName\",\n        name: \"lastName\",\n        type: \"text\",\n        label: \"Apellidos\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.lastName,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"role\",\n        name: \"role\",\n        type: \"number\",\n        label: \"Rol\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.role,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"birthdate\",\n        type: \"date\",\n        name: \"birthdate\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        placeholder: \"Cumplea\\xF1os\",\n        value: this.state.birthdate,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        label: \"Correo electronico\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.email,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            variant: \"filled\",\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }, \"+\")\n        },\n        id: \"countryCode\",\n        name: \"countryCode\",\n        type: \"text\",\n        label: \"c\\xF3digo de pa\\xEDs\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.countryCode,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"phone\",\n        name: \"phone\",\n        type: \"text\",\n        label: \"Telefono\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.phone,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"username\",\n        required: true,\n        id: \"username\",\n        label: \"Usuario\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: this.state.username,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"password\",\n        required: true,\n        id: \"filled-adornment-password\",\n        label: \"Contrase\\xF1a\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: this.state.password,\n        onChange: this.handleInputChange,\n        type: this.state.showPassword ? 'text' : 'password',\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            variant: \"filled\",\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Datos del Domicilio\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"addressLine1\",\n        name: \"addressLine1\",\n        type: \"text\",\n        label: \"Direcci\\xF3n 1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.addressLine1,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"addressLine2\",\n        name: \"addressLine2\",\n        type: \"text\",\n        label: \"Direcci\\xF3n 2\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.addressLine2,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"reference\",\n        name: \"reference\",\n        type: \"text\",\n        label: \"Referencias\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.reference,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"neighborhood\",\n        name: \"neighborhood\",\n        type: \"text\",\n        label: \"Colonia\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.neighborhood,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"estado\",\n        name: \"estado\",\n        type: \"text\",\n        label: \"Estado\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.estado,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"city\",\n        name: \"city\",\n        type: \"text\",\n        label: \"Ciudad\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.city,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"zipCode\",\n        name: \"zipCode\",\n        type: \"text\",\n        label: \"Codigo postal\",\n        value: this.state.zipCode,\n        onChange: this.handleInputChange,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      })), React.createElement(MuiThemeProvider, {\n        theme: Guardar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"medium\",\n        className: classes.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Guardar\"))))));\n      return content;\n    }\n  }]);\n\n  return FormUser;\n}(Component);\n\nFormUser.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(FormUser);","map":{"version":3,"sources":["/var/www/html/geeckostore/src/views/Register.jsx"],"names":["React","Component","PropTypes","Avatar","CssBaseline","Paper","Typography","Grid","TextField","Button","InputAdornment","IconButton","withStyles","MuiThemeProvider","AccountCircle","VisibilityOff","Visibility","styles","Guardar","FormUser","handleClickShowPassword","setState","state","showPassword","handleAddUser","data","username","password","firstName","lastName","role","birthdate","email","addressLine1","addressLine2","reference","neighborhood","estado","city","zipCode","countryCode","phone","url","settings","method","headers","body","JSON","stringify","request","Request","fetch","then","response","json","users","catch","error","console","log","handleInputChange","bind","e","target","value","name","classes","props","content","paper","avatar","form","startAdornment","endAdornment","submit","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar, CssBaseline, Paper, Typography, Grid, TextField, Button,\n  InputAdornment, IconButton\n} from '@material-ui/core';\nimport {  withStyles, MuiThemeProvider } from '@material-ui/core/styles';\nimport { AccountCircle, VisibilityOff, Visibility} from '@material-ui/icons';\nimport { styles, Guardar } from '../styles/Register';\n\nclass FormUser extends Component{\n    constructor(){\n        super();\n        this.state = {\n          username: '',\n          password: '',\n          firstName: '',\n          lastName: '',\n          role: '',\n          birthdate: '',\n          email: '',\n          addressLine1: '',\n          addressLine2: '',\n          reference: '',\n          neighborhood: '',\n          estado: '',\n          city: '',\n          zipCode: '',\n          countryCode: '',\n          phone: '',\n          showPassword: '',\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleAddUser = this.handleAddUser.bind(this);\n\n    }\n    handleClickShowPassword = () => {\n        this.setState(state => ({ showPassword: !state.showPassword }));\n    };\n\n\n    handleInputChange(e){\n        const {value, name} = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleAddUser = async () => {\n\n    const data = {\n      \"username\": this.state.username,\n      \"password\": this.state.password,\n      \"firstName\": this.state.firstName,\n      \"lastName\": this.state.lastName,\n      \"role\": this.state.role,\n      \"birthdate\": this.state.birthdate,\n      \"Email\": {\n        \"email\":this.state.email,\n      },\n      \"Address\": {\n        \"addressLine1\": this.state.addressLine1,\n        \"addressLine2\": this.state.addressLine2,\n        \"reference\": this.state.reference,\n        \"neighborhood\": this.state.neighborhood,\n        \"state\": this.state.estado,\n        \"city\": this.state.city,\n        \"zipCode\": this.state.zipCode,\n      },\n      \"Phone\": {\n        \"countryCode\":this.state.countryCode,\n        \"phone\":this.state.phone\n      }\n    };\n\n\n    const url = 'http://localhost:3000/users';\n\n    const settings = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'content-Type': 'application/json'\n      },\n      body:JSON.stringify(data)\n    };\n\n    const request = new Request(url, settings);\n\n    await fetch(request)\n    .then(response => response.json())\n    .then(data => this.setState({ users: [...this.state.users, data] }))\n    .catch(error => console.log(error))\n  };\n\n   \n\n  render(){\n    const {classes} = this.props;\n    let content = (\n      <div>\n        <CssBaseline/>\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <AccountCircle/>\n          </Avatar>\n          <form className={classes.form} onSubmit={this.handleAddUser}>\n            <Grid container spacing={24}>\n                <Grid item xs={12} sm={12}>\n                  <Typography variant=\"h6\" gutterBottom>\n                     Datos del Usuario\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                     fullWidth\n                     id=\"firstName\"\n                     name=\"firstName\"\n                     type=\"text\"\n                     label=\"Nombre\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.firstName}\n                     onChange={this.handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                    fullWidth\n                     id=\"lastName\"\n                     name=\"lastName\"\n                     type=\"text\"\n                     label=\"Apellidos\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.lastName}\n                     onChange={this.handleInputChange}/>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                    fullWidth\n                     id=\"role\"\n                     name=\"role\"\n                     type=\"number\"\n                     label=\"Rol\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.role}\n                     onChange={this.handleInputChange}/>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      id=\"birthdate\"\n                      type=\"date\"\n                      name=\"birthdate\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"Cumpleaños\"\n                      value={this.state.birthdate}\n                      onChange={this.handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                    fullWidth\n                     id=\"email\"\n                     name=\"email\"\n                     type=\"text\"\n                     label=\"Correo electronico\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.email}\n                     onChange={this.handleInputChange}/>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <TextField\n                     fullWidth\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment variant=\"filled\" position=\"end\">\n                            +\n                          </InputAdornment>\n                        ),\n                     }}\n                     id=\"countryCode\"\n                     name=\"countryCode\"\n                     type=\"text\"\n                     label=\"código de país\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.countryCode}\n                     onChange={this.handleInputChange}/>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <TextField\n                     fullWidth\n                     id=\"phone\"\n                     name=\"phone\"\n                     type=\"text\"\n                     label=\"Telefono\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.phone}\n                     onChange={this.handleInputChange}\n                     />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                      name=\"username\"\n                      required\n                      id=\"username\"\n                      label=\"Usuario\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      value={this.state.username}\n                      onChange={this.handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                      name=\"password\"\n                      required\n                      id=\"filled-adornment-password\"\n                      label=\"Contraseña\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      value={this.state.password}\n                      onChange={this.handleInputChange}\n                      type={this.state.showPassword ? 'text' : 'password'}\n                      InputProps={{\n                        endAdornment:(\n                        <InputAdornment variant=\"filled\" position=\"end\">\n                          <IconButton\n                            aria-label=\"Toggle password visibility\"\n                            onClick={this.handleClickShowPassword}\n                          >\n                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                          </IconButton>\n                        </InputAdornment>\n                        ),\n                      }}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={12}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Datos del Domicilio\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      id=\"addressLine1\"\n                      name=\"addressLine1\"\n                      type=\"text\"\n                      label=\"Dirección 1\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      value={this.state.addressLine1}\n                      onChange={this.handleInputChange}\n                     />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      id=\"addressLine2\"\n                      name=\"addressLine2\"\n                      type=\"text\"\n                      label=\"Dirección 2\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      value={this.state.addressLine2}\n                      onChange={this.handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                     fullWidth\n                     id=\"reference\"\n                     name=\"reference\"\n                     type=\"text\"\n                     label=\"Referencias\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.reference}\n                     onChange={this.handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                     fullWidth\n                     id=\"neighborhood\"\n                     name=\"neighborhood\"\n                     type=\"text\"\n                     label=\"Colonia\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.neighborhood}\n                     onChange={this.handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                     fullWidth\n                     id=\"estado\"\n                     name=\"estado\"\n                     type=\"text\"\n                     label=\"Estado\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.estado}\n                     onChange={this.handleInputChange}/>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                     fullWidth\n                     id=\"city\"\n                     name=\"city\"\n                     type=\"text\"\n                     label=\"Ciudad\"\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     value={this.state.city}\n                     onChange={this.handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                     id=\"zipCode\"\n                     name=\"zipCode\"\n                     type=\"text\"\n                     label=\"Codigo postal\"\n                     value={this.state.zipCode}\n                     onChange={this.handleInputChange}\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                    />\n                </Grid>\n                <MuiThemeProvider theme={Guardar}>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" size=\"medium\" className={classes.submit}>\n                        Guardar\n                    </Button>\n                </MuiThemeProvider>\n            </Grid>\n          </form>\n        </Paper>\n      </div>\n    );\n    return content;\n  }\n}\n\n\n FormUser.propTypes = {\n   classes: PropTypes.object.isRequired,\n };\n\n export default withStyles(styles)(FormUser);\n"]},"metadata":{},"sourceType":"module"}