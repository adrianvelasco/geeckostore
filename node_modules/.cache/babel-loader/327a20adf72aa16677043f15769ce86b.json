{"ast":null,"code":"import _slicedToArray from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/geeckostore/src/Components/Exercises/index.jsx\";\nimport React, { Fragment } from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nvar styles = {\n  Paper: {\n    padding: 20,\n    marginTop: 10,\n    marginBottom: 10,\n    height: 500,\n    overflowY: 'auto'\n  }\n};\nexport default (function (_ref) {\n  var exercises = _ref.exercises,\n      category = _ref.category,\n      onSelect = _ref.onSelect,\n      _ref$exercise = _ref.exercise,\n      id = _ref$exercise.id,\n      _ref$exercise$title = _ref$exercise.title,\n      title = _ref$exercise$title === void 0 ? 'Welcome!' : _ref$exercise$title,\n      _ref$exercise$descrip = _ref$exercise.description,\n      description = _ref$exercise$descrip === void 0 ? 'Please select an exercise from the list on the left.' : _ref$exercise$descrip;\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    style: styles.Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, exercises.map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        group = _ref3[0],\n        exercises = _ref3[1];\n\n    return !category || category === group ? React.createElement(Fragment, {\n      key: group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"headline\",\n      style: {\n        textTransform: 'capitalize'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, group), React.createElement(List, {\n      component: \"ul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, exercises.map(function (_ref4) {\n      var id = _ref4.id,\n          title = _ref4.title;\n      return React.createElement(ListItem, {\n        key: id,\n        button: true,\n        onClick: function onClick() {\n          return onSelect(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }))) : null;\n  }))), React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    style: styles.Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"display1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, title), React.createElement(Typography, {\n    variant: \"subheading\",\n    style: {\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, description))));\n});","map":{"version":3,"sources":["/var/www/html/geeckostore/src/Components/Exercises/index.jsx"],"names":["React","Fragment","Grid","Paper","Typography","ListItem","ListItemText","List","styles","padding","marginTop","marginBottom","height","overflowY","exercises","category","onSelect","exercise","id","title","description","map","group","textTransform"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport {Grid, Paper, Typography} from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\n\nconst styles = {\n  Paper: {\n    padding: 20,\n    marginTop: 10,\n    marginBottom: 10,\n    height: 500,\n    overflowY: 'auto'\n  }\n}\n\nexport default ({\n  exercises,\n  category,\n  onSelect,\n  exercise: {\n    id,\n    title = 'Welcome!',\n    description = 'Please select an exercise from the list on the left.'\n  }\n }) =>\n  <Grid container>\n    <Grid item sm>\n      <Paper style={styles.Paper}>\n        {exercises.map(([group, exercises]) =>\n          !category || category === group\n            ? <Fragment key={group}>\n                <Typography\n                  variant=\"headline\"\n                  style={{ textTransform: 'capitalize' }}\n                >\n                  {group}\n                </Typography>\n                <List component=\"ul\">\n                  {exercises.map(({ id, title }) =>\n                    <ListItem\n                      key={id}\n                      button\n                      onClick={() => onSelect(id)}\n                    >\n                      <ListItemText primary={title} />\n                    </ListItem>\n                  )}\n                </List>\n              </Fragment>\n            : null\n        )}\n      </Paper>\n    </Grid>\n    <Grid item sm>\n      <Paper style={styles.Paper}>\n        <Typography\n          variant=\"display1\"\n        >\n          {title}\n        </Typography>\n        <Typography\n          variant=\"subheading\"\n          style={{marginTop: 20}}\n        >\n          {description}\n        </Typography>\n      </Paper>\n    </Grid>\n  </Grid>\n"]},"metadata":{},"sourceType":"module"}