{"ast":null,"code":"var _jsxFileName = \"/var/www/html/geeckostore/src/components/Writers/index.js\";\nimport React, { Fragment } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { NotFound } from '../Errors';\nimport Writer from './Writer';\nexport default (function (_ref) {\n  var url = _ref.match.url,\n      writers = _ref.writers;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, writers.map(function (_ref2) {\n    var id = _ref2.id,\n        name = _ref2.name;\n    return React.createElement(\"li\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(url, \"/\").concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, name));\n  })), React.createElement(Route, {\n    exact: true,\n    path: url,\n    render: function render() {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Porfavor selecciona un escritor\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(url, \"/:writerId\"),\n    render: function render(props) {\n      var writer = writers.find(function (_ref3) {\n        var id = _ref3.id;\n        return id === props.match.params.writerId;\n      });\n\n      if (!writer) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Writer, Object.assign({}, props, writer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/var/www/html/geeckostore/src/components/Writers/index.js"],"names":["React","Fragment","Link","Route","NotFound","Writer","url","match","writers","map","id","name","props","writer","find","params","writerId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;AACA,SAAQC,QAAR,QAAuB,WAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,gBAAe;AAAA,MAAUC,GAAV,QAAEC,KAAF,CAAUD,GAAV;AAAA,MAAgBE,OAAhB,QAAgBA,OAAhB;AAAA,SACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,GAAR,CAAY;AAAA,QAAEC,EAAF,SAAEA,EAAF;AAAA,QAAMC,IAAN,SAAMA,IAAN;AAAA,WACX;AAAI,MAAA,GAAG,EAAED,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,YAAKJ,GAAL,cAAYI,EAAZ,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BC,IAA3B,CADF,CADW;AAAA,GAAZ,CADH,CAFF,EAUE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAEL,GAAnB;AAAwB,IAAA,MAAM,EAC1B;AAAA,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAN;AAAA,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAaE,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKA,GAAL,eAAX;AAAiC,IAAA,MAAM,EACnC,gBAAAM,KAAK,EAAI;AACP,UAAMC,MAAM,GAAGL,OAAO,CAACM,IAAR,CAAa;AAAA,YAAEJ,EAAF,SAAEA,EAAF;AAAA,eAAUA,EAAE,KAAKE,KAAK,CAACL,KAAN,CAAYQ,MAAZ,CAAmBC,QAApC;AAAA,OAAb,CAAf;;AAEA,UAAG,CAACH,MAAJ,EAAW;AACT,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aAAO,oBAAC,MAAD,oBAAYD,KAAZ,EAAuBC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADa;AAAA,CAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport {NotFound} from '../Errors';\nimport Writer from './Writer';\n\n\nexport default ({match: {url}, writers}) =>\n  <Fragment>\n    \n    <ul>\n      {writers.map(({id, name}) =>\n        <li key={id}>\n          <Link to={`${url}/${id}`}>{name}</Link>\n        </li>\n      )}\n    </ul>\n\n    <Route exact path={url} render={\n        () => <h3>Porfavor selecciona un escritor</h3>\n      }/>\n    <Route path={`${url}/:writerId`} render={\n        props => {\n          const writer = writers.find(({id}) => id === props.match.params.writerId);\n\n          if(!writer){\n            return <NotFound/>\n          }\n\n          return <Writer {...props} {...writer}/>;\n        }\n    }/>\n  </Fragment>\n"]},"metadata":{},"sourceType":"module"}