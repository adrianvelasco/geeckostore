{"ast":null,"code":"import _toConsumableArray from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/geeckostore/src/Components/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Header, Footer } from './Layouts';\nimport Exercises from './Exercises';\nimport { muscles, exercises } from '../store';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      exercises: exercises,\n      exercise: {}\n    };\n\n    _this.handleCategorySelected = function (category) {\n      _this.setState({\n        category: category\n      });\n    };\n\n    _this.handleExerciseSelected = function (id) {\n      _this.setState(function (_ref) {\n        var exercises = _ref.exercises;\n        return {\n          exercise: exercises.find(function (ex) {\n            return ex.id === id;\n          })\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getExercisesByMuscles\",\n    value: function getExercisesByMuscles() {\n      return Object.entries(this.state.exercises.reduce(function (exercises, exercise) {\n        var muscles = exercise.muscles;\n        exercises[muscles] = exercises[muscles] ? _toConsumableArray(exercises[muscles]).concat([exercise]) : [exercise];\n        return exercises;\n      }, {}));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var exercises = this.getExercisesByMuscles(),\n          _this$state = this.state,\n          category = _this$state.category,\n          exercise = _this$state.exercise;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Exercises, {\n        exercise: exercise,\n        category: category,\n        exercises: exercises,\n        onSelect: this.handleExerciseSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        category: category,\n        muscles: muscles,\n        onSelect: this.handleCategorySelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/var/www/html/geeckostore/src/Components/App.js"],"names":["React","Component","Fragment","Header","Footer","Exercises","muscles","exercises","App","state","exercise","handleCategorySelected","category","setState","handleExerciseSelected","id","find","ex","Object","entries","reduce","getExercisesByMuscles"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,MAAR,EAAgBC,MAAhB,QAA6B,WAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,UAAnC;;IAEqBC,G;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNF,MAAAA,SAAS,EAATA,SADM;AAENG,MAAAA,QAAQ,EAAE;AAFJ,K;;UAmBRC,sB,GAAyB,UAAAC,QAAQ,EAAI;AACnC,YAAKC,QAAL,CAAc;AACZD,QAAAA,QAAQ,EAARA;AADY,OAAd;AAGD,K;;UAEDE,sB,GAAyB,UAAAC,EAAE,EAAI;AAC7B,YAAKF,QAAL,CAAc;AAAA,YAAGN,SAAH,QAAGA,SAAH;AAAA,eAAoB;AAChCG,UAAAA,QAAQ,EAAEH,SAAS,CAACS,IAAV,CAAe,UAAAC,EAAE;AAAA,mBAAIA,EAAE,CAACF,EAAH,KAAUA,EAAd;AAAA,WAAjB;AADsB,SAApB;AAAA,OAAd;AAGD,K;;;;;;;4CAxBuB;AACtB,aAAOG,MAAM,CAACC,OAAP,CACL,KAAKV,KAAL,CAAWF,SAAX,CAAqBa,MAArB,CAA4B,UAACb,SAAD,EAAYG,QAAZ,EAAyB;AAAA,YAC3CJ,OAD2C,GAC/BI,QAD+B,CAC3CJ,OAD2C;AAGnDC,QAAAA,SAAS,CAACD,OAAD,CAAT,GAAqBC,SAAS,CAACD,OAAD,CAAT,sBACbC,SAAS,CAACD,OAAD,CADI,UACOI,QADP,KAEjB,CAACA,QAAD,CAFJ;AAIA,eAAOH,SAAP;AACD,OARD,EAQG,EARH,CADK,CAAP;AAWD;;;6BAcQ;AACD,UAAAA,SAAS,GAAG,KAAKc,qBAAL,EAAZ;AAAA,wBACqB,KAAKZ,KAD1B;AAAA,UACFG,QADE,eACFA,QADE;AAAA,UACQF,QADR,eACQA,QADR;AAGN,aAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAGL,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAEA,QADZ;AAEE,QAAA,QAAQ,EAAEE,QAFZ;AAGE,QAAA,SAAS,EAAEL,SAHb;AAIE,QAAA,QAAQ,EAAE,KAAKO,sBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHK,EAUL,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAEF,QADZ;AAEE,QAAA,OAAO,EAAEN,OAFX;AAGE,QAAA,QAAQ,EAAE,KAAKK,sBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVK,CAAP;AAgBD;;;;EApD8BV,S;;SAAZO,G","sourcesContent":["import React, {Component, Fragment} from 'react';\n\nimport {Header, Footer} from './Layouts';\nimport Exercises from './Exercises';\nimport { muscles, exercises } from '../store';\n\nexport default class App extends Component {\n  state = {\n    exercises,\n    exercise: {}\n  }\n\n  getExercisesByMuscles() {\n    return Object.entries(\n      this.state.exercises.reduce((exercises, exercise) => {\n        const { muscles } = exercise\n\n        exercises[muscles] = exercises[muscles]\n          ? [...exercises[muscles], exercise]\n          : [exercise]\n\n        return exercises\n      }, {})\n    )\n  }\n\n  handleCategorySelected = category => {\n    this.setState({\n      category\n    })\n  }\n\n  handleExerciseSelected = id => {\n    this.setState(({ exercises }) => ({\n      exercise: exercises.find(ex => ex.id === id)\n    }))\n  }\n\n  render() {\n    const exercises = this.getExercisesByMuscles(),\n      { category, exercise } = this.state\n\n    return <Fragment>\n      <Header />\n\n      <Exercises\n        exercise={exercise}\n        category={category}\n        exercises={exercises}\n        onSelect={this.handleExerciseSelected}\n      />\n\n      <Footer\n        category={category}\n        muscles={muscles}\n        onSelect={this.handleCategorySelected}\n      />\n    </Fragment>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}