{"ast":null,"code":"var _jsxFileName = \"/var/www/html/geeckostore/src/components/Writers/Writer/index.js\";\nimport React, { Fragment } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { NotFound } from '../../Errors';\nimport Text from '../Texts';\nexport default (function (_ref) {\n  var url = _ref.match.url,\n      name = _ref.name,\n      born = _ref.born,\n      decased = _ref.decased,\n      description = _ref.description,\n      image = _ref.image,\n      texts = _ref.texts;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    style: {\n      maxWidth: 250\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, name), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, born, \" \\u2014 \", decased), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, description), React.createElement(\"ul\", {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, texts.map(function (_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(url, \"/texts/\").concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, title));\n  })), React.createElement(Route, {\n    path: \"\".concat(url, \"/texts/:textId\"),\n    render: function render(props) {\n      var text = texts.find(function (_ref3) {\n        var id = _ref3.id;\n        return id === props.match.params.textId;\n      });\n\n      if (!text) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Text, Object.assign({}, text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/var/www/html/geeckostore/src/components/Writers/Writer/index.js"],"names":["React","Fragment","Link","Route","NotFound","Text","url","match","name","born","decased","description","image","texts","maxWidth","id","map","title","props","text","find","params","textId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,gBAAe;AAAA,MAAUC,GAAV,QAAEC,KAAF,CAAUD,GAAV;AAAA,MAAgBE,IAAhB,QAAgBA,IAAhB;AAAA,MAAsBC,IAAtB,QAAsBA,IAAtB;AAAA,MAA4BC,OAA5B,QAA4BA,OAA5B;AAAA,MAAqCC,WAArC,QAAqCA,WAArC;AAAA,MAAkDC,KAAlD,QAAkDA,KAAlD;AAAA,MAAyDC,KAAzD,QAAyDA,KAAzD;AAAA,SACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAED,KAAV;AAAiB,IAAA,GAAG,EAAEJ,IAAtB;AAA4B,IAAA,KAAK,EAAE;AAACM,MAAAA,QAAQ,EAAC;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAL,CAHJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAL,cAAoBC,OAApB,CALJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAPJ,EASI;AAAI,IAAA,GAAG,EAAEI,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAU;AAAA,QAAED,EAAF,SAAEA,EAAF;AAAA,QAAME,KAAN,SAAMA,KAAN;AAAA,WACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AAAM,MAAA,EAAE,YAAKX,GAAL,oBAAkBS,EAAlB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,KADH,CADH,CADU;AAAA,GAAV,CADH,CATJ,EAoBE,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKX,GAAL,mBAAX;AAAqC,IAAA,MAAM,EACvC,gBAAAY,KAAK,EAAI;AACP,UAAMC,IAAI,GAAGN,KAAK,CAACO,IAAN,CAAW;AAAA,YAAEL,EAAF,SAAEA,EAAF;AAAA,eAAUA,EAAE,KAAKG,KAAK,CAACX,KAAN,CAAYc,MAAZ,CAAmBC,MAApC;AAAA,OAAX,CAAb;;AAEA,UAAG,CAACH,IAAJ,EAAS;AACP,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aAAO,oBAAC,IAAD,oBAAUA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADa;AAAA,CAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport {NotFound} from '../../Errors';\nimport Text from '../Texts';\nexport default ({match: {url}, name, born, decased, description, image, texts}) =>\n  <Fragment>\n      <img src={image} alt={name} style={{maxWidth:250}}></img>\n\n      <h1>{name}</h1>\n\n      <h3>{born} &mdash; {decased}</h3>\n\n      <p>{description}</p>\n\n      <ul key={id}>\n        {texts.map(({id, title}) =>\n        \t<li>\n            <Link to={`${url}/texts/${id}`}>\n              {title}\n            </Link>\n        \t</li>\n        )}\n      </ul>\n\n\n    <Route path={`${url}/texts/:textId`} render={\n        props => {\n          const text = texts.find(({id}) => id === props.match.params.textId)\n\n          if(!text){\n            return <NotFound/>;\n          }\n\n          return <Text {...text}/>\n        }\n      }/>\n  </Fragment>\n"]},"metadata":{},"sourceType":"module"}