{"ast":null,"code":"import _classCallCheck from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/geeckostore/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/geeckostore/src/components/Layout/index.js\";\nimport React, { Component } from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Hidden, Drawer, Divider } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nim;\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      mobileOpen: false\n    };\n\n    _this.handleDrawerToggle = function () {\n      _this.setState({\n        mobileOpen: !state.mobileOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          children = _this$props.children;\n      var mobileOpen = this.state.mobileOpen;\n      var drawer = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), \"Hola mundo\", React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n      return;\n      React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: this.handleDrawerToggle,\n        className: classes.navIconHide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Responsive drawer\"))), React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        container: this.props.container,\n        variant: \"temporary\",\n        open: mobileOpen,\n        onClose: this.handleDrawerToggle,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, drawer)), React.createElement(Hidden, {\n        xsDown: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        classes: {\n          paper: classes.drawerPaper\n        },\n        variant: \"permanent\",\n        open: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, drawer)), React.createElement(\"main\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), children));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/var/www/html/geeckostore/src/components/Layout/index.js"],"names":["React","Component","AppBar","Toolbar","IconButton","Typography","Hidden","Drawer","Divider","Menu","im","state","mobileOpen","handleDrawerToggle","setState","props","classes","children","drawer","toolbar","root","appBar","navIconHide","container","paper","drawerPaper","keepMounted","content"],"mappings":"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","sourcesContent":["import  React, {Component} from 'react';\nimport {\n  AppBar, Toolbar, IconButton, Typography, Hidden, Drawer, Divider\n} from '@material-ui/core';\nimport {Menu} from '@material-ui/icons';\nim\n\nexport default class extends Component{\n  state = {\n      mobileOpen: false\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !state.mobileOpen })\n  }\n\n  render(){\n\n    const {classes, children} = this.props;\n    const {mobileOpen} = this.state;\n\n    const drawer = (\n      <div>\n        <div className={classes.toolbar}/>\n          Hola mundo\n          <Divider/>\n      </div>\n    );\n\n    return\n    <div className={classes.root}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.navIconHide}\n            >\n              <Menu />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Responsive drawer\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Hidden mdUp>\n          <Drawer\n            container={this.props.container}\n            variant=\"temporary\"\n            open={mobileOpen}\n            onClose={this.handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <main className={classes.content}>\n          <div className={classes.toolbar}/>\n          {children}\n        </main>\n      </div>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}